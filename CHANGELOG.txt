Changelog
=========

v1.2.1-beta (2020-05-07)
------------------------

- Added a missing import.

v1.2.0-beta (2020-05-07)
------------------------

- Added a Table class.
- Small fixes to texts and docs.
- Added an introduction in the documentation to highlight the difference among
  words and strings.
- Added a workaround to have bordered HTML tables in Jupyter Lab.

v1.2.0-beta (2020-04-21)
-------------------------

- Bumped to beta.
- Added display.animate_derivation (and hence ipywidgets to the deps).
- Dderivation now admits productions and not only indexes.
- Added utils.uc to append unicode combination chars.
- Grammar.restrict_to now makes explicit that the start symbol must be kept and
  throws away productions containing also not specified terminals.

v1.1.0-alpha (2020-03-31)
-------------------------

- Now Derivation accepts also an iterable of steps (both for left/rightmost and
  general case).

v1.0.1-alpha (2020-03-26)
-------------------------

- Bumped ANTLR jar to version 4.8.
- Fixed a few typos in docs (thanks also to @andreazube)

1.0.0-alpha (2019-05-28)
------------------------

- Bumped the major version, non new features expected since this year class is done.
- Added the parameter fail_on_error to the liblet.antlr.ANTLR.context method to make
  it return None in case of parsing errors
- Modified the liblet.antlr.ANTLR.tree method so that it returns None in case of
  parse errors
- The liblet.antlr.ANTLR.tree method does not include nodes for the EOF token.

v0.12.4-alpha (2019-05-28)
--------------------------

- The liblet.display.Tree.with_threads method puts nodes at the same rank according to
  their depth in the tree.
- The liblet.antlr.ANTLR.tree method ignores <EOF> tokens for non simple trees.

v0.12.3-alpha (2019-05-28)
--------------------------

- Added new documentation for recently added classes and a few utils.
- Moved the liblet.display.warn method to liblet.utils.warn.
- Fixing the None node display style in liblet.display.Tree.with_threads.

v0.12.2-alpha (2019-05-28)
--------------------------

- Added HTML escaping to liblet.dislpay.iter2table and liblet.dislpay.dict2table.
- Added liblet.display.Tree.with_thread method.
- Added liblet.antlr.AnnotatedTreeWalker class.

v0.12.1-alpha (2019-05-15)
--------------------------

- Added and fixed ANTLR class tests.

v0.12.0-alpha (2019-05-15)
--------------------------

- Added documentation for the Tree class.
- Refactored heavily the ANTLR class.
- Added documentation for the ANTLR class.

v0.11.1-alpha (2019-05-14)
--------------------------

- The display.Tree class uses pseudo-HTML Graphviz labels if the root is a dict.
- The antlr.ANTLR class keeps track of the generated sources (in the sources field).

v0.11.0-alpha (2019-05-09)
--------------------------

- Complete redesign of liblet.antlr module.
- Removed utils.StatesQueueMap class.

v0.10.0-alpha (2019-05-03)
--------------------------

- Modifications in the display module:
    - removed StateTransitionGraph.from_lr method,
    - added large_label parameter to StateTransitionGraph.from_automaton method,
    - added compact parameter to ProductionGraph.
    - added sep parameter to dod2table method,
    - added sort parameter to dod2table method (to control sorting of row/column headers),
    - methods cyk2table and prods2table generate a bordered (non wide) table,
    - added warn method (to display messages on sys.stderr),
    - added ff2table method (to display FIRST/FOLLOW table),
    - added dict2table method (to display a dict as a table),
    - method dod2table encloses cell content in <pre>,
    - method dod2table uses OrderedDict.fromkeys to make the list unique preserving column order,
    - reviewed table visualization methods.
- Modifications in the grammar module:
    - added Item.symbol_after_dot and Item.advance methods,
    - improved type checking for Transition,
    - Transition can be made from tuples of items,
    - renamed Grammar.context_free to Grammar.is_context_free (and added to __slots__).
- Modifications in the utils module:
    - added Stack.peek method (to inspect the top of the stack without pop).
- Improved documentation:
    - fixed the documentation of the modified methods and classes,
    - added documentation for grammar.Item,
    - regenerated examples (due to display module improvements),
    - uniformed right/left-hand side naming,
- Tests:
    - added tests for the Transition containing items,
    - added a test for the new Stack.peek method,
- Cleanup:
    - moved EarlyItem out of the library (it will not be used soon),

v0.9.2-alpha (2019-04-16)
-------------------------

- The display.Tree.__repr__ method now puts parentheses around all subtrees (leaf included).
- Added rhs_is_suffix_of to Production.such_that and tested the new kwargs.
- Added documentation for Production.such_that.
- Added documentation for Grammar.restrict_to.
- Added documentation for StateTransitionGraph
- Added grammar hygiene and CYK to docs/examples.
- Added Creative Commons license file (for docs).
- Moving the playground here and added a mybinder button.
- Added a custom CSS for tables in docs.

v0.9.1-alpha (2019-04-04)
-------------------------

- Added Stack.copy and Queue.copy methods.
- Made Stack and Queue iterable.
- Changed the __repr__ method of Stack: the representation of Stack([1, 2, 3]) is Stack(1, 2, 3 ↔).
- Changed the __repr__ method of representation: the repr of Queue([1, 2, 3]) is Queue(← 1, 2, 3 ←).
- Added the Zenodo https://doi.org/10.5281/zenodo.2619589 DOI.

v0.9.0-alpha (2019-04-02)
-------------------------

- Added test to take the coverage of the automaton module to 100%.
- Added some type checking to the automaton constructors and static factories.
- Fixed custom comparison method __lt__ against a different type to return NotImplemented.
- Renamed the Quickstart documentation section to Examples.
- Moved the method Automata.coalesce to StateTransitionGraph (as a parameter of from_automata static method).

v0.8.6-alpha (2019-04-01)
-------------------------

- Maintenance release.

v0.8.5-alpha (2019-03-28)
-------------------------

- Added tests to take coverage of the grammar module to 100%.
- Added this CHANGELOG.txt file (and some tools to handle it).
- Fixed display.cyk2table function for the case with a nullable
  row.


v0.8.4-alpha (2019-03-28)
-------------------------

- First (wrong) implementation of nullable row in display.cyk2table.


v0.8.3-alpha (2019-03-28)
-------------------------

- Added methods Grammar.restrict_to, Production.such_that, and
  function display.prods2table.


v0.8.2-alpha (2019-03-25)
-------------------------

- Added display.cyk2table function and renamed display.dod2html
  function to display.dod2table.


v0.8.1-alpha (2019-03-18)
-------------------------

- Fixed a very wrong implementation of left/rightmost derivation steps.
- Fixed ProductionGraph to handle nullable symbols.
- Added LIBLET_NOBEACON to disable Google Analytics beconing.
- Added decorator module docs.


v0.8.0-alpha (2019-03-17)
-------------------------

- Removed Grammar.all_terminals method and and renamed Grammar.rhs
  method to Grammar.alternatives.
- Filled the docs of Derivation.
- Added a reference to the jar installation script.
- Cleaned up and added some tests.


v0.7.1-alpha (2019-03-17)
-------------------------

- Fixing errors due to methods refactoring among modules.


v0.7.0-alpha (2019-03-17)
-------------------------

- Moved difficult to test (god forbids) code for rich display
  in a single (non tested) module.
- Removed jupyter repr tricks.
- Added codecov integration.


v0.6.0-alpha (2019-03-14)
-------------------------

- Added __eq__ and __hash__ where needed.
- Got rid of _ensure_tuple in favor of Production.as_type0.


v0.5.2-alpha (2019-03-12)
-------------------------

- Fixing test method names after refactoring.


v0.5.1-alpha (2019-03-12)
-------------------------

- Adding a quickstart generated via Jupyter.


v0.5.0-alpha (2019-03-12)
-------------------------

- Working on documentation.
- Now matches can be restricted to prod or pos, used to implement
  left/rightmost steps.
- Made Derivation immutable.
- Repurposed display.productions_table in the more general display.iter2table.


v0.4.0-alpha (2019-03-11)
-------------------------

- Now left/right-hand side are separated with HAIR_SPACE.
- ProductionGraph now works by level (every step goes down one level).
- Checking that travis gets a failure.
- Added Travis integration.
- Added code to test if ANTLR4_JAR is defined and points to an existing file.
