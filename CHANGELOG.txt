Changelog
=========

v1.12.1 (2025-04-09)
--------------------

- Updated tests to match Stack new iteration order.

v1.12.0 (2025-04-03)
--------------------

- Moved Table from utils to display (in src and docs).
- Minor tweaks to doc configurations and css.
- Refactored HTML table rendering.
- Changed (and documented) iteration order of Stack.

v1.11.1 (2025-04-01)
--------------------

- Fixed Tree SVG rendering (after introducing Tree.__eq__).

v1.11 (2025-03-29)
------------------

- Added new ComputationGraph class.

v1.10 (2025-03-27)
------------------

- Minor cleanups and improvements.
- Added Production.is_epsilon method.
- Added Productions.has_epsilon_productions method.
- Added Grammar.has_epsilon_productions method.
- Improved TopDownInstantaneousDescription and BottomUpInstantaneousDescription to handle
  epsilon productions.
- Added Tree.__eq__ and Tree.__hash__ methods (to allow Stack of trees comparison, required
  to avoid loops in  simulations of automata combinations).

v1.9.1 (2025-03-24)
-------------------

- Major rewriting of the HTML styles for tables (to improve VScode and Quarto compatibility).
- Added an embed_css function and a CUSTOM_CSS constant.
- Moved Table and CYKTable from liblet.utils to liblet.display.
- Introduced deprecation_warning to distinguish from warn (liblet internal function)

v1.8.0 (2025-03-13)
-------------------

- Deprecated first, to extract an element from a set there is set.pop.
- Deprecated pyast2tree, not is the from_pyast factory method of Tree.
- Production if the rhs is the empty tuple or list is created as an epsilon
  rule.
- Added equals and hash to InstantaneousDescription that can be used to avoid 
  loops in simulations.

v1.7.9 (2025-02-28)
-------------------

- Updated conf.py because Sphinx does not like versions.html anymore.

v1.7.8 (2025-02-28)
-------------------

- Updated .readthedocs.yml to include sphinx configuration.

v1.7.7 (2025-02-28)
-------------------

- Updated ANTLR to 4.13.2.

v1.7.6 (2024-05-28)
-------------------

- Tree.with_threads now shows labels for jumps different from next.


v1.7.5 (2024-04-12)
-------------------

- Added the line number as attribute of the ANTLR annotated parse tree. 
- Now TopDownInstantaneousDescription.predict does not put the Îµ on the stack.

v1.7.4 (2024-04-11)
-------------------

- Added save and load to ANTLR and AnnotatedTreeWalker documentation.
- Now also table use "Fira Code" (and the font name is in liblet.const).

v1.7.3 (2024-04-04)
-------------------

- Forgot to refactor tests.

v1.7.2 (2024-04-04)
-------------------

- GVWrapper now uses "Fira Code" as default font.
- Improved InstantaneousDescription representations
- Fixed a bug in Tree graph representation.

v1.7.1 (2024-04-04)
-------------------

- Added resized_svg_repr to liblet.display.
- Added svglib dependency (needed by resized_svg_repr).
- Improved GVWrapper in liblet.display.
- Added compose in liblet.utils.

v1.7.0a0 (2024-03-25)
---------------------

- Removed support for Python < 3.10.
- All source are clean according to ruff.
- Big refactoring in liblet.display, favoring composition (with the new
  GVWrapper) over inheritance (of BaseGraph(ABC)).
- InstantaneousDescription now uses colors instead of unicode combining
  characters
- Minor cleanups and fixes.

v1.6.4a0 (2024-02-25)
---------------------

- Here we are again: forcing publication.
- Removed bump2version config.

v1.6.4 (2024-02-25)
-------------------

- Updated ANTLR to 4.13.1.

v1.6.3a1 (2023-04-04)
---------------------

- Forcing publication.

v1.6.3a (2023-04-04)
--------------------

- Removed a spurious sort in Talbe (columns), that induced an 
  apparent error in FIRST/FOLLOW tables computation.

v1.6.2a (2023-02-25)
--------------------

- Fixed the Readthedocs build.

v1.6.1a (2023-02-25)
--------------------

- Using hatch for testing, tox gone forever.

v1.6.0a (2023-02-24)
--------------------

- Migrated to Hatch (and pyproject.toml from setup.py).
- Updated to ANTLR to 4.12.0.
- Added GitHub Actions Status badge.
- Added testing for python 3.10.

v1.5.7-alpha (2022-05-30)
-------------------------

- Added html escamping to cell contents in Table.
- Added warning reporting when generating ANTLR files from grammar.
- Fixed a deprecation warning in some of the regexp.
- Added first to API documentation.
- Using tox instead of tox4.
- Updated antlr to 4.10.
- Using bump2version instead of the deprecated bumpversion.


v1.5.5-alpha (2022-03-18)
-------------------------

- The base element of a CYKTable is a set.
- Added installation of LLVM 11 to the gitpod Dockerfile.
- Updated documentation to the actually used versions of dependencies.
- CYKTable replaces cyk2table in documentation examples.
- Using GITHUB_WORKSPACE instead of hard wiring the path in GitHub workflow.


v1.5.4-alpha (2022-03-18)
-------------------------

- Introduced CYKTable (and deprecated cyk2table).

v1.5.3-alpha (2022-03-15)
-------------------------

- Automating the publish/release via GitHub Actions.

v1.5.3-alpha (2022-03-15)
-------------------------

- Productions now sorts the table rows (in production order).
- Updated examples to use Productions instead prods2table (now deprecated).
- Testing coverage is reported using Coveralls (instead of Codecov).


v1.5.2-alpha (2022-03-11)
-------------------------

- A new Productions class has been introduced to allow a nicer HTML
  representation of grammar productions.
- Added the Graph.neighbors method (to iterate on adjacency lists).
- Made Tree iterable (to allow for root and children unpakcing).
- Major code reformatting (now 2 spaces are used instead of 4).
- Cosmetic fixes (removing some stale imports and commited files).
- Now docs point to Gitpod (Binder is completely gone).


v1.5.1-alpha (2022-03-08)
-------------------------

- From binder to gitpod.
- Updated to the new graphviz api.
- Now sing GitHub Actions to run tests (instead of Travis).

v1.5.0-alpha (2022-02-11)
-------------------------

- Getting ready for the next year.
- Fixed unittest discover parameters.
- Updated dependency to ANTLR 4.9.3.

v1.4.2-alpha (2021-06-04)
-------------------------

- Emergency fix for LLVM toolchain detection code.

v1.4.1-alpha (2021-06-04)
-------------------------

- Added installation instructions related to the new LLVM module.
- Completely removed *beaconing*.
- Added support for tox testing (with Python 3.7, 3.8, and 3.9).

v1.4.0-alpha (2021-05-28)
-------------------------

- Added an experimental LLVM module to support IR code generation.
- AnnotatedTreeWalker.TREE_CATCHALL does not collect None subtrees.
- AnnotatedTreeWalker.register decorator trims ending _ (to allow builtin named
  keys).
- AnnotatedTreeWalker.register optionally takes the function name.
- Annotated trees now have an attr attribute defined as a AttrDict wrapping the
  root dict.
- Added AttrDict in liblet.utils.
- ANTLR.context and ANTLR.tree accept a antlr_hook parameter that allows
  complete configuration of the underlying lexer and parser.
- Stack and Queue now support reversed iteration.

v1.3.8-alpha (2021-05-06)
-------------------------

- The ANTLR and AnnotatedTreeWalker object can be serialized (suing the
  load/save methods).
- Added pyast2tree method to get a Tree from a Python ast.
- Annotated Tree rich display ignores dictionary keys starting with '_thread_'.

v1.3.6-alpha (2021-05-03)
-------------------------

- Added src key to annotated trees produced by the tree method of
  ANTLR objects.
- Improved hash sign readability (defined the HASH constant equal to '\u266F',
  replacing previous '\uFF03')
- Derivation can now start from any nonterminal.

v1.3.3-alpha (2021-04-20)
-------------------------

- The display.side_by_side now accepts a single argument (and iterates
  over it).

v1.3.2-alpha (2021-04-19)
-------------------------

- Now TopDownInstantaneousDescription.match skips epsilon on the stack.
- Added the suffixes commodity function in utlis package.
- Minimal docs improvements.


v1.3.1-alpha (2021-04-11)
-------------------------

- InstantaneousDescription has been subclassed in two specilized classes:
  TopDownInstantaneousDescription and BottomUpInstantaneousDescription.
- Stack and Queues copy method has been deprecated in favor of more
  standard use of the copy module (the shallow copy obtains a separate
  storage by overriding __copy__).
- InstantaneousDescription and its subclasses shallow copies don't share
  the stack with the original object (obtained by overriding __copy__).
- Improved deprecations (now the warning module is used instead of raise).

v1.3.0-alpha (2021-04-10)
-------------------------

- Added a first version of the InstantaneousDescription class (in liblet.automata).
- Documentation improvement (substituted :obj: with :class: where appropriate).
- Bumped ANTLR version to 4.9.1.
- Created FUNDING.yml for GitHub sponsorship.

v1.2.3-beta (2020-05-07)
------------------------

- To avoid confusion with peek of Stack and Queue, utils.peek has been
  deprecated in favor of utils.first.
- Updated Automaton and StateTransitionGraph to allow representing item
  set with frozenset instead of tuples.
- Modified utils.closure so that it always return the computed value,
  in this way if just one iteration is performed, the returned type
  coincides nonetheless with the type returned by the wrapped function.
- Fixing some graphviz visualization sizes.

v1.2.1-beta (2020-05-07)
------------------------

- Added a missing import.

v1.2.0-beta (2020-05-07)
------------------------

- Added a Table class.
- Small fixes to texts and docs.
- Added an introduction in the documentation to highlight the difference among
  words and strings.
- Added a workaround to have bordered HTML tables in Jupyter Lab.

v1.2.0-beta (2020-04-21)
-------------------------

- Bumped to beta.
- Added display.animate_derivation (and hence ipywidgets to the deps).
- Dderivation now admits productions and not only indexes.
- Added utils.uc to append unicode combination chars.
- Grammar.restrict_to now makes explicit that the start symbol must be kept and
  throws away productions containing also not specified terminals.

v1.1.0-alpha (2020-03-31)
-------------------------

- Now Derivation accepts also an iterable of steps (both for left/rightmost and
  general case).

v1.0.1-alpha (2020-03-26)
-------------------------

- Bumped ANTLR jar to version 4.8.
- Fixed a few typos in docs (thanks also to @andreazube)

1.0.0-alpha (2019-05-28)
------------------------

- Bumped the major version, non new features expected since this year class is done.
- Added the parameter fail_on_error to the liblet.antlr.ANTLR.context method to make
  it return None in case of parsing errors
- Modified the liblet.antlr.ANTLR.tree method so that it returns None in case of
  parse errors
- The liblet.antlr.ANTLR.tree method does not include nodes for the EOF token.

v0.12.4-alpha (2019-05-28)
--------------------------

- The liblet.display.Tree.with_threads method puts nodes at the same rank according to
  their depth in the tree.
- The liblet.antlr.ANTLR.tree method ignores <EOF> tokens for non simple trees.

v0.12.3-alpha (2019-05-28)
--------------------------

- Added new documentation for recently added classes and a few utils.
- Moved the liblet.display.warn method to liblet.utils.warn.
- Fixing the None node display style in liblet.display.Tree.with_threads.

v0.12.2-alpha (2019-05-28)
--------------------------

- Added HTML escaping to liblet.dislpay.iter2table and liblet.dislpay.dict2table.
- Added liblet.display.Tree.with_thread method.
- Added liblet.antlr.AnnotatedTreeWalker class.

v0.12.1-alpha (2019-05-15)
--------------------------

- Added and fixed ANTLR class tests.

v0.12.0-alpha (2019-05-15)
--------------------------

- Added documentation for the Tree class.
- Refactored heavily the ANTLR class.
- Added documentation for the ANTLR class.

v0.11.1-alpha (2019-05-14)
--------------------------

- The display.Tree class uses pseudo-HTML Graphviz labels if the root is a dict.
- The antlr.ANTLR class keeps track of the generated sources (in the sources field).

v0.11.0-alpha (2019-05-09)
--------------------------

- Complete redesign of liblet.antlr module.
- Removed utils.StatesQueueMap class.

v0.10.0-alpha (2019-05-03)
--------------------------

- Modifications in the display module:
    - removed StateTransitionGraph.from_lr method,
    - added large_label parameter to StateTransitionGraph.from_automaton method,
    - added compact parameter to ProductionGraph.
    - added sep parameter to dod2table method,
    - added sort parameter to dod2table method (to control sorting of row/column headers),
    - methods cyk2table and prods2table generate a bordered (non wide) table,
    - added warn method (to display messages on sys.stderr),
    - added ff2table method (to display FIRST/FOLLOW table),
    - added dict2table method (to display a dict as a table),
    - method dod2table encloses cell content in <pre>,
    - method dod2table uses OrderedDict.fromkeys to make the list unique preserving column order,
    - reviewed table visualization methods.
- Modifications in the grammar module:
    - added Item.symbol_after_dot and Item.advance methods,
    - improved type checking for Transition,
    - Transition can be made from tuples of items,
    - renamed Grammar.context_free to Grammar.is_context_free (and added to __slots__).
- Modifications in the utils module:
    - added Stack.peek method (to inspect the top of the stack without pop).
- Improved documentation:
    - fixed the documentation of the modified methods and classes,
    - added documentation for grammar.Item,
    - regenerated examples (due to display module improvements),
    - uniformed right/left-hand side naming,
- Tests:
    - added tests for the Transition containing items,
    - added a test for the new Stack.peek method,
- Cleanup:
    - moved EarlyItem out of the library (it will not be used soon),

v0.9.2-alpha (2019-04-16)
-------------------------

- The display.Tree.__repr__ method now puts parentheses around all subtrees (leaf included).
- Added rhs_is_suffix_of to Production.such_that and tested the new kwargs.
- Added documentation for Production.such_that.
- Added documentation for Grammar.restrict_to.
- Added documentation for StateTransitionGraph
- Added grammar hygiene and CYK to docs/examples.
- Added Creative Commons license file (for docs).
- Moving the playground here and added a mybinder button.
- Added a custom CSS for tables in docs.

v0.9.1-alpha (2019-04-04)
-------------------------

- Added Stack.copy and Queue.copy methods.
- Made Stack and Queue iterable.
- Changed the __repr__ method of Stack: the representation of Stack([1, 2, 3]) is Stack(1, 2, 3 â).
- Changed the __repr__ method of representation: the repr of Queue([1, 2, 3]) is Queue(â 1, 2, 3 â).
- Added the Zenodo https://doi.org/10.5281/zenodo.2619589 DOI.

v0.9.0-alpha (2019-04-02)
-------------------------

- Added test to take the coverage of the automaton module to 100%.
- Added some type checking to the automaton constructors and static factories.
- Fixed custom comparison method __lt__ against a different type to return NotImplemented.
- Renamed the Quickstart documentation section to Examples.
- Moved the method Automata.coalesce to StateTransitionGraph (as a parameter of from_automata static method).

v0.8.6-alpha (2019-04-01)
-------------------------

- Maintenance release.

v0.8.5-alpha (2019-03-28)
-------------------------

- Added tests to take coverage of the grammar module to 100%.
- Added this CHANGELOG.txt file (and some tools to handle it).
- Fixed display.cyk2table function for the case with a nullable
  row.


v0.8.4-alpha (2019-03-28)
-------------------------

- First (wrong) implementation of nullable row in display.cyk2table.


v0.8.3-alpha (2019-03-28)
-------------------------

- Added methods Grammar.restrict_to, Production.such_that, and
  function display.prods2table.


v0.8.2-alpha (2019-03-25)
-------------------------

- Added display.cyk2table function and renamed display.dod2html
  function to display.dod2table.


v0.8.1-alpha (2019-03-18)
-------------------------

- Fixed a very wrong implementation of left/rightmost derivation steps.
- Fixed ProductionGraph to handle nullable symbols.
- Added LIBLET_NOBEACON to disable Google Analytics beconing.
- Added decorator module docs.


v0.8.0-alpha (2019-03-17)
-------------------------

- Removed Grammar.all_terminals method and and renamed Grammar.rhs
  method to Grammar.alternatives.
- Filled the docs of Derivation.
- Added a reference to the jar installation script.
- Cleaned up and added some tests.


v0.7.1-alpha (2019-03-17)
-------------------------

- Fixing errors due to methods refactoring among modules.


v0.7.0-alpha (2019-03-17)
-------------------------

- Moved difficult to test (god forbids) code for rich display
  in a single (non tested) module.
- Removed jupyter repr tricks.
- Added codecov integration.


v0.6.0-alpha (2019-03-14)
-------------------------

- Added __eq__ and __hash__ where needed.
- Got rid of _ensure_tuple in favor of Production.as_type0.


v0.5.2-alpha (2019-03-12)
-------------------------

- Fixing test method names after refactoring.


v0.5.1-alpha (2019-03-12)
-------------------------

- Adding a quickstart generated via Jupyter.


v0.5.0-alpha (2019-03-12)
-------------------------

- Working on documentation.
- Now matches can be restricted to prod or pos, used to implement
  left/rightmost steps.
- Made Derivation immutable.
- Repurposed display.productions_table in the more general display.iter2table.


v0.4.0-alpha (2019-03-11)
-------------------------

- Now left/right-hand side are separated with HAIR_SPACE.
- ProductionGraph now works by level (every step goes down one level).
- Checking that travis gets a failure.
- Added Travis integration.
- Added code to test if ANTLR4_JAR is defined and points to an existing file.
