# -*- coding: utf-8; mode: python -*-

ignore_regexps = [
    r'^Bump version',
    r'^Release version',
    r'@minor', r'!minor',
    r'@cosmetic', r'!cosmetic',
    r'@refactor', r'!refactor',
    r'@wip', r'!wip',
    r'^([cC]hg|[fF]ix|[nN]ew)\s*:\s*[p|P]kg:',
    r'^([cC]hg|[fF]ix|[nN]ew)\s*:\s*[d|D]ev:',
    r'^(.{3,3}\s*:)?\s*[fF]irst commit.?\s*$',
    r'^$',  ## ignore commits with empty messages
]

section_regexps = [
    ('New features', [
        r'^[nN]ew\s*:\s*((dev|use?r|pkg|test|doc)\s*:\s*)?([^\n]*)$',
     ]),
    ('Changes', [
        r'^[cC]hg\s*:\s*((dev|use?r|pkg|test|doc)\s*:\s*)?([^\n]*)$',
     ]),
    ('Fixes', [
        r'^[fF]ix\s*:\s*((dev|use?r|pkg|test|doc)\s*:\s*)?([^\n]*)$',
     ]),
    ('Other', None ## Match all lines
     ),

]

body_process = ReSub(r'((^|\n)[A-Z]\w+(-\w+)*: .*(\n\s+.*)*)+$', r'') | strip

subject_process = (strip |
    ReSub(r'^([cC]hg|[fF]ix|[nN]ew)\s*:\s*((dev|use?r|pkg|test|doc)\s*:\s*)?([^\n@]*)(@[a-z]+\s+)*$', r'\4') |
    SetIfEmpty('No commit message.') | ucfirst | final_dot)

tag_filter_regexp = r'v[0-9]+\.[0-9]+(\.[0-9]+)?(-(alpha|beta))?'

unreleased_version_label = '[yet to be released]'

output_engine = mustache('.changelog.tpl')

include_merge = True

revs = [(lambda: '^v' + FileFirstRegexMatch('./src/liblet/__init__.py', r"__version__ = '(?P<rev>.*)'")()), 'HEAD']
